{"version":3,"sources":["store/constants/index.js","store/reducers/weatherReducer.js","store/store.js","screens/Header.js","store/actions/weatherAction.js","components/DayCardItem.js","components/DegreeToggle/DegreeToggle.js","components/Carousel.js","components/BarChart/BarChart.js","components/DayCard.js","screens/Spinner/Spinner.js","components/ForecastCards.js","screens/AppError/AppErrorAlert.js","App.js","theme.js","index.js"],"names":["GET_WEATHER_INFO_REQUEST","GET_WEATHER_INFO","GET_WEATHER_INFO_FAIL","GET_TEMP_IN_FAHRENHEIT","GET_TEMP_IN_FAHRENHEIT_FAIL","GET_TEMP_IN_CELSIUS","GET_TEMP_IN_CELSIUS_FAIL","initialState","reducer","combineReducers","weatherInfo","state","action","type","loading","payload","degreeType","error","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","AppBar","position","Toolbar","Typography","variant","className","REACT_APP_API_KEY","process","activeCardItem","borderStyle","borderColor","borderWidth","weatherBtn","textDecoration","DayCardItem","props","day","isActive","setActive","cardIndex","url","useRouteMatch","iconCode","weather","icon","iconUrl","newDate","Date","weekday","dt","setTime","paramUrlId","dt_txt","split","useSelector","degreeHandler","Math","trunc","main","temp","Box","color","component","gutterBottom","moment","format","Avatar","alt","src","to","Button","onClick","display","flexDirection","alignItems","margin","DegreeToggle","dispatch","useDispatch","useState","fahrenheitActive","setFahrenheitActive","celsiusActive","setCelsiusActive","ButtonGroup","a","axios","get","data","response","message","Carousel","children","show","currentIndex","setCurrentIndex","length","setLength","useEffect","Container","Grid","container","mb","prevState","faArrowLeft","faArrowRight","style","transform","BarChart","useParams","list","filterList","filter","d","includes","chartData","forEach","el","hourData","tempInfo","hourInfo","push","marginTop","justifyContent","item","xs","sm","md","showGrid","max","fill","valueField","argumentField","text","DayCard","matchesMaxWidth","useMediaQuery","matchesMinWidth","setShow","dailyData","activeIndex","setActiveIndex","path","width","mx","mt","map","index","Spinner","CircularProgress","ForecastCards","isLoading","setIsLoading","config","headers","console","log","setTimeout","weekDay","AppErrorAlert","Alert","severity","App","exact","from","createTheme","palette","primary","light","dark","contrastText","secondary","openTitle","deepPurple","protectedTitle","indigo","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4b8aee5d.chunk.js","sourcesContent":["export const GET_WEATHER_INFO_REQUEST = \"GET_WEATHER_INFO_REQUEST\";\nexport const GET_WEATHER_INFO = \"GET_WEATHER_INFO\";\nexport const GET_WEATHER_INFO_FAIL = \"GET_WEATHER_INFO_FAIL\";\n\nexport const GET_TEMP_IN_FAHRENHEIT = \"GET_TEMP_IN_FAHRENHEIT\";\nexport const GET_TEMP_IN_FAHRENHEIT_FAIL = \"GET_TEMP_IN_FAHRENHEIT_FAIL\";\n\nexport const GET_TEMP_IN_CELSIUS = \"GET_TEMP_IN_CELSIUS\";\nexport const GET_TEMP_IN_CELSIUS_FAIL = \"GET_TEMP_IN_CELSIUS_FAIL\";\n","import {\n  GET_TEMP_IN_CELSIUS,\n  GET_TEMP_IN_CELSIUS_FAIL,\n  GET_TEMP_IN_FAHRENHEIT,\n  GET_TEMP_IN_FAHRENHEIT_FAIL,\n  GET_WEATHER_INFO,\n  GET_WEATHER_INFO_FAIL,\n  GET_WEATHER_INFO_REQUEST,\n} from \"../constants\";\n\nconst initialState = {};\n\nexport const weatherInfoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_WEATHER_INFO_REQUEST:\n      return { loading: true };\n    case GET_WEATHER_INFO:\n      return { loading: false, weatherInfo: action.payload };\n    case GET_TEMP_IN_FAHRENHEIT:\n      return {\n        ...state,\n        weatherInfo: action.payload,\n        degreeType: \"fahrenheit\",\n      };\n    case GET_TEMP_IN_CELSIUS:\n      return { ...state, weatherInfo: action.payload, degreeType: \"celsius\" };\n    case GET_WEATHER_INFO_FAIL:\n    case GET_TEMP_IN_FAHRENHEIT_FAIL:\n    case GET_TEMP_IN_CELSIUS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {weatherInfoReducer} from './reducers/weatherReducer'\n\nconst reducer = combineReducers({\n  weatherInfo: weatherInfoReducer\n})\n\nconst initialState = {}\n\nconst middleware = [thunk]\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import React from \"react\";\n// MUI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography\n          variant=\"h6\"\n          className={classes.title}\n          data-test=\"component-header\"\n        >\n          WeatherCastReport\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import {\n  GET_WEATHER_INFO,\n  GET_WEATHER_INFO_FAIL,\n  GET_TEMP_IN_FAHRENHEIT,\n  GET_TEMP_IN_CELSIUS,\n  GET_WEATHER_INFO_REQUEST,\n  GET_TEMP_IN_FAHRENHEIT_FAIL,\n  GET_TEMP_IN_CELSIUS_FAIL,\n} from \"../constants\";\nimport axios from \"axios\";\n\nconst { REACT_APP_API_KEY } = process.env;\n\nexport const getWeatherInfo = () => async (dispatch) => {\n  try {\n    dispatch({ type: GET_WEATHER_INFO_REQUEST });\n\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        };\n\n        const { data } = await axios.get(\n          `http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=${REACT_APP_API_KEY}&cnt=50&units=imperial`,\n          config\n        );\n\n    dispatch({\n      type: GET_WEATHER_INFO,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: GET_WEATHER_INFO_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getTempInFahrenheit = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\n      `http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=${REACT_APP_API_KEY}&cnt=50&units=imperial`\n    );\n\n    dispatch({\n      type: GET_TEMP_IN_FAHRENHEIT,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_TEMP_IN_FAHRENHEIT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getTempInCelsius = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\n      `http://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=${REACT_APP_API_KEY}&cnt=50&units=metric`\n    );\n\n    dispatch({\n      type: GET_TEMP_IN_CELSIUS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_TEMP_IN_CELSIUS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n// MUI\nimport { Button, Typography, Box, Avatar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//Redux\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  activeCardItem: {\n    borderStyle: \"solid\",\n    borderColor: \"#8561c5\",\n    borderWidth: 1,\n  },\n  weatherBtn: {\n    textDecoration: \"none\",\n  },\n}));\n\nconst DayCardItem = (props) => {\n  const { day, isActive, setActive, cardIndex } = props;\n  const classes = useStyles();\n  let { url } = useRouteMatch();\n\n  let iconCode = day.weather[0].icon;\n  let iconUrl = `http://openweathermap.org/img/w/${iconCode}.png`;\n\n  let newDate = new Date();\n  const weekday = day.dt * 1000;\n  newDate.setTime(weekday);\n\n  let paramUrlId = day.dt_txt;\n  paramUrlId = paramUrlId.split(\" \")[0];\n\n  const { degreeType } = useSelector((state) => state.weatherInfo);\n\n  const degreeHandler = `Temp: ${Math.trunc(day.main.temp)}º${\n    degreeType === \"celsius\" ? \"C\" : \"F\"\n  }`;\n\n  return (\n    <Box className={`${isActive && classes.activeCardItem}`}>\n      <Typography color=\"textSecondary\" component=\"h3\" gutterBottom>\n        {degreeHandler}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        {moment(newDate).format(\"dddd\")}\n      </Typography>\n      <Avatar alt=\"weather icon\" src={iconUrl} />\n\n      <Typography>{moment(newDate).format(\"MMMM Do, h:mm a\")}</Typography>\n      <Link to={`${url}/${paramUrlId}`} className={classes.weatherBtn}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => setActive(cardIndex)}\n        >\n          Weather Details\n        </Button>\n      </Link>\n    </Box>\n  );\n};\n\nexport default DayCardItem;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getTempInCelsius,\n  getTempInFahrenheit,\n} from \"../../store/actions/weatherAction\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst DegreeToggle = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const [fahrenheitActive, setFahrenheitActive] = useState(false);\n  const [celsiusActive, setCelsiusActive] = useState(false);\n\n  const updateForecastDegreeFahrenheit = () => {\n    dispatch(getTempInFahrenheit());\n    setFahrenheitActive(!fahrenheitActive);\n    setCelsiusActive(false);\n  };\n\n  const updateForecastDegreeCelcious = () => {\n    dispatch(getTempInCelsius());\n    setCelsiusActive(!celsiusActive);\n    setFahrenheitActive(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <ButtonGroup color=\"primary\">\n        <Button\n          variant={fahrenheitActive ? \"contained\" : \"outlined\"}\n          onClick={updateForecastDegreeFahrenheit}\n          data-testid=\"fahrenheit-button\"\n        >\n          Fahrenheit\n        </Button>\n        <Button\n          variant={celsiusActive ? \"contained\" : \"outlined\"}\n          onClick={updateForecastDegreeCelcious}\n          data-testid=\"celsius-button\"\n        >\n          Celsius\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n\nexport default DegreeToggle;\n","import React, { useEffect, useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n// MUI\nimport { Container, Grid, Box, Button } from \"@material-ui/core\";\n\nconst Carousel = (props) => {\n  const { children, show } = props;\n\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [length, setLength] = useState(children.length);\n\n  useEffect(() => {\n    setLength(children.length);\n  }, [children]);\n\n  const next = () => {\n    if (currentIndex < length - show) {\n      setCurrentIndex((prevState) => prevState + 1);\n    }\n  };\n\n  const prev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex((prevState) => prevState - 1);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Container>\n        <Grid container>\n          <Box flexGrow={1} mb={3}>\n            {currentIndex > 0 && (\n              <Button variant=\"contained\" color=\"primary\" onClick={prev}>\n                <FontAwesomeIcon icon={faArrowLeft} />\n              </Button>\n            )}\n          </Box>\n          <Box mb={3}>\n            {currentIndex < length - show && (\n              <Button variant=\"contained\" color=\"primary\" onClick={next}>\n                <FontAwesomeIcon icon={faArrowRight} />\n              </Button>\n            )}\n          </Box>\n        </Grid>\n      </Container>\n      <div className=\"carousel-container\">\n        <div className=\"carousel-wrapper\">\n          <div className=\"carousel-content-wrapper\">\n            <div\n              className={`carousel-content show-${show}`}\n              style={{\n                transform: `translateX(-${currentIndex * (100 / show)}%)`,\n              }}\n            >\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Carousel;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  Chart,\n  BarSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { Animation } from \"@devexpress/dx-react-chart\";\n\nconst BarChart = () => {\n  let { dt } = useParams();\n\n  const { weatherInfo: { list } = {} } = useSelector(\n    (state) => state.weatherInfo\n  );\n\n  const filterList =\n    list &&\n    list.length !== 0 &&\n    list.filter((d) => {\n      return d.dt_txt.includes(dt);\n    });\n\n  const chartData = [];\n\n  filterList &&\n    filterList.forEach((el) => {\n      let temp = el.main.temp;\n      let hour = el.dt_txt;\n      let hourData = {\n        tempInfo: temp,\n        hourInfo: hour.split(\" \")[1],\n      };\n      chartData.push(hourData);\n    });\n\n  const consumptionColor = \"#8e44ad\";\n\n  return (\n    <Grid container style={{ marginTop: \"5rem\" }}>\n      <Grid container justifyContent=\"center\">\n        <Grid item xs={12} sm={8} md={6}>\n          <Chart data={chartData}>\n            <ArgumentAxis showGrid />\n            <ValueAxis max={7} />\n\n            <BarSeries\n              fill={consumptionColor}\n              valueField=\"tempInfo\"\n              argumentField=\"hourInfo\"\n            />\n            <Title text=\"Hourly Temperature\" />\n            <Animation />\n          </Chart>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BarChart;\n","import React, { Fragment, useEffect, useState } from \"react\";\n// MUI\nimport { Box, Container, Grid } from \"@material-ui/core\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n// Components\nimport DayCardItem from \"./DayCardItem\";\nimport DegreeToggle from \"./DegreeToggle/DegreeToggle\";\nimport Carousel from \"./Carousel\";\nimport BarChart from \"./BarChart/BarChart\";\n\nconst DayCard = (props) => {\n  const matchesMaxWidth = useMediaQuery(\"(max-width:600px)\");\n  const matchesMinWidth = useMediaQuery(\"(min-width:601px)\");\n\n  let [show, setShow] = useState(3);\n\n  const { dailyData } = props;\n\n  useEffect(() => {\n    if (matchesMaxWidth) {\n      setShow(() => 1);\n    }\n    if (matchesMinWidth) {\n      setShow(() => 3);\n    }\n  }, [show, matchesMaxWidth, matchesMinWidth]);\n\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  let { path } = useRouteMatch();\n\n  return (\n    <Fragment>\n      <Container>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <DegreeToggle />\n          </Grid>\n        </Grid>\n      </Container>\n      <Box width=\"100%\" mx=\"auto\" mt=\"3rem\">\n        <Carousel show={show}>\n          {dailyData &&\n            dailyData.map((day, index) => (\n              <DayCardItem\n                key={index}\n                day={day}\n                setActive={setActiveIndex}\n                isActive={activeIndex === index}\n                cardIndex={index}\n              />\n            ))}\n        </Carousel>\n      </Box>\n      <Switch>\n        <Route path={`${path}/:dt`}>\n          <BarChart />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n};\nexport default DayCard;\n","import { Container, Grid, Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = () => {\n  return (\n    <Container>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Box mt={30}>\n            <CircularProgress color=\"secondary\" />\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Spinner;\n\n\n\n","import React, { useEffect, useState, Fragment } from \"react\";\n// Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWeatherInfo } from \"../store/actions/weatherAction\";\n// Components\nimport DayCard from \"./DayCard\";\nimport Spinner from \"../screens/Spinner/Spinner\";\n\nconst ForecastCards = () => {\n  const dispatch = useDispatch();\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { weatherInfo: { list } = {} } = useSelector(\n    (state) => state.weatherInfo\n  );\n\n  const { error } = useSelector((state) => state.weatherInfo);\n\n  useEffect(() => {\n    if (!error) {\n      dispatch(getWeatherInfo());\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1300);\n    } else {\n      setIsLoading(true);\n    }\n  }, [dispatch, error]);\n\n  const dailyData =\n    list &&\n    list.length !== 0 &&\n    list.filter((weekDay) => weekDay.dt_txt.includes(\"18:00:00\"));\n\n  return (\n    <Fragment>\n      <div>{isLoading ? <Spinner /> : <DayCard dailyData={dailyData} />}</div>\n      <div>{error && isLoading && <Spinner />}</div>\n    </Fragment>\n  );\n};\n\nexport default ForecastCards;\n","import React from \"react\";\n// Redux\nimport { useSelector } from \"react-redux\";\n// MUI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst AppErrorAlert = () => {\n  const classes = useStyles();\n\n  const { error } = useSelector((state) => state.weatherInfo);\n  return (\n    <div className={classes.root}>\n      {error && <Alert severity=\"warning\">{error}</Alert>}\n    </div>\n  );\n};\n\nexport default AppErrorAlert;\n","import React, { Fragment } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n// Components\nimport Header from \"./screens/Header\";\nimport ForecastCards from \"./components/ForecastCards\";\nimport AppErrorAlert from \"./screens/AppError/AppErrorAlert\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <AppErrorAlert />\n      <Router>\n        <Header />\n        <Switch>\n          <Redirect exact from=\"/weather-casting\" to=\"/weather-forecast\" />\n          <Route path=\"/weather-forecast\">\n            <ForecastCards />\n          </Route>\n        </Switch>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { createTheme } from \"@material-ui/core/styles\";\nimport { deepPurple, indigo } from \"@material-ui/core/colors\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: \"#8561c5\",\n      main: \"#673ab7\",\n      dark: \"#482880\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#637bfe\",\n      main: \"#3d5afe\",\n      dark: \"#2a3eb1\",\n      contrastText: \"#fff\",\n    },\n    openTitle: deepPurple[\"400\"],\n    protectedTitle: indigo[\"400\"],\n    type: \"light\",\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n// Components\nimport App from \"./App\";\n// MUI\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}